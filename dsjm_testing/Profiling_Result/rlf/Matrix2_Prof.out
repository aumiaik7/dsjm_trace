Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00    26869     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      0.00     0.00     2182     0.00     0.00  MaxQueue::opt(int, int)
  0.00      0.00     0.00     1371     0.00     0.00  BucketPQ<MaxQueue>::insert(int, int)
  0.00      0.00     0.00     1369     0.00     0.00  BucketPQ<MaxQueue>::remove(int)
  0.00      0.00     0.00     1097     0.00     0.00  int const& std::max<int>(int const&, int const&)
  0.00      0.00     0.00      811     0.00     0.00  BucketPQ<MaxQueue>::change(int, int)
  0.00      0.00     0.00      806     0.00     0.00  IRowColumnDS::max(int, int)
  0.00      0.00     0.00      709     0.00     0.00  PriorityQueueItem::PriorityQueueItem(int, int)
  0.00      0.00     0.00      626     0.00     0.00  IRowColumnDS::setIndColEntry(int, int)
  0.00      0.00     0.00      626     0.00     0.00  IRowColumnDS::setIndRowEntry(int, int)
  0.00      0.00     0.00      529     0.00     0.00  BucketPQ<MaxQueue>::get(int)
  0.00      0.00     0.00      529     0.00     0.00  BucketPQ<MaxQueue>::increase(int)
  0.00      0.00     0.00      282     0.00     0.00  BucketPQ<MaxQueue>::decrease(int)
  0.00      0.00     0.00      200     0.00     0.00  int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int)
  0.00      0.00     0.00      180     0.00     0.00  BucketPQ<MaxQueue>::top()
  0.00      0.00     0.00       81     0.00     0.00  MaxQueue::next_op(int)
  0.00      0.00     0.00       24     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      0.00     0.00       24     0.00     0.00  std::__niter_base<int*, false>::__b(int*)
  0.00      0.00     0.00       16     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      0.00     0.00       16     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      0.00     0.00       16     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      0.00     0.00       16     0.00     0.00  std::__miter_base<int*, false>::__b(int*)
  0.00      0.00     0.00       16     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      0.00     0.00       16     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      0.00     0.00       10     0.00     0.00  BucketPQ<MaxQueue>::make_empty()
  0.00      0.00     0.00        8     0.00     0.00  void RLF::pq_initializeDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int*&, BucketPQ<MaxQueue>&, bool*, int*)
  0.00      0.00     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      0.00     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.00     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.00     0.00        8     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      0.00     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::capacity() const
  0.00      0.00     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      0.00     0.00        8     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.00     0.00        8     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.00     0.00        8     0.00     0.00  int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      0.00     0.00        8     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      0.00     0.00        8     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        8     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        8     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      0.00     0.00        8     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      0.00     0.00        8     0.00     0.00  int* std::__uninitialized_copy<true>::uninitialized_copy<int*, int*>(int*, int*, int*)
  0.00      0.00     0.00        8     0.00     0.00  int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*)
  0.00      0.00     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::reserve(unsigned long)
  0.00      0.00     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      0.00     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.00     0.00        8     0.00     0.00  int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
  0.00      0.00     0.00        8     0.00     0.00  int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
  0.00      0.00     0.00        8     0.00     0.00  int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  0.00      0.00     0.00        8     0.00     0.00  int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
  0.00      0.00     0.00        8     0.00     0.00  int* std::copy<int*, int*>(int*, int*, int*)
  0.00      0.00     0.00        2     0.00     0.00  BucketPQ<MaxQueue>::BucketPQ(int, int)
  0.00      0.00     0.00        2     0.00     0.00  BucketPQ<MaxQueue>::~BucketPQ()
  0.00      0.00     0.00        2     0.00     0.00  MaxQueue::opt_init_value(int)
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _Z13display_usagev
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _Z16gcolor_getrusageR6rusage
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _ZN12IRowColumnDSC2Eiiib
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _ZN13MatrixUtility10loadMatrixESsP6Matrix
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _ZN6MatrixC2Eiiib
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _ZN7ColPack5TimerC2Ev
  0.00      0.00     0.00        1     0.00     0.00  global constructors keyed to _ZN7IMatrixC2Eiiib
  0.00      0.00     0.00        1     0.00     0.00  readBanner(Configuration*)
  0.00      0.00     0.00        1     0.00     0.00  canReadFile(Configuration*)
  0.00      0.00     0.00        1     0.00     0.00  mm_read_banner(_IO_FILE*, char (*) [4])
  0.00      0.00     0.00        1     0.00     0.00  mm_read_mtx_crd_size(_IO_FILE*, int*, int*, int*)
  0.00      0.00     0.00        1     0.00     0.00  processCommandLineParameters(int, char**, Configuration*)
  0.00      0.00     0.00        1     0.00     0.00  RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&)
  0.00      0.00     0.00        1     0.00     0.00  run(Configuration*)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  void readData<IMatrix>(Configuration*, _IO_FILE*, IMatrix*)
  0.00      0.00     0.00        1     0.00     0.00  IRowColumnDS::computeCCS()
  0.00      0.00     0.00        1     0.00     0.00  IRowColumnDS::computeCRS()
  0.00      0.00     0.00        1     0.00     0.00  IRowColumnDS::compress()
  0.00      0.00     0.00        1     0.00     0.00  IRowColumnDS::IRowColumnDS(int, int, int, bool)
  0.00      0.00     0.00        1     0.00     0.00  IRowColumnDS::~IRowColumnDS()
  0.00      0.00     0.00        1     0.00     0.00  Configuration::Configuration()
  0.00      0.00     0.00        1     0.00     0.00  Configuration::~Configuration()
  0.00      0.00     0.00        1     0.00     0.00  Configuration::~Configuration()
  0.00      0.00     0.00        1     0.00     0.00  RunningTimeInfo::RunningTimeInfo(int, double, double, int*)
  0.00      0.00     0.00        1     0.00     0.00  CLI::parseMethod(char*)
  0.00      0.00     0.00        1     0.00     0.00  CLI::method_to_string(CLI::ordering_method)
  0.00      0.00     0.00        1     0.00     0.00  Matrix::computedegree()
  0.00      0.00     0.00        1     0.00     0.00  Matrix::rlf(int*)
  0.00      0.00     0.00        1     0.00     0.00  Matrix::Matrix(int, int, int, bool)
  0.00      0.00     0.00        1     0.00     0.00  Matrix::~Matrix()
  0.00      0.00     0.00        1     0.00     0.00  Matrix::~Matrix()
  0.00      0.00     0.00        1     0.00     0.00  Result::printResult()
  0.00      0.00     0.00        1     0.00     0.00  Result::printMatrixInfo()
  0.00      0.00     0.00        1     0.00     0.00  Result::printInfo()
  0.00      0.00     0.00        1     0.00     0.00  Result::Result()
  0.00      0.00     0.00        1     0.00     0.00  Result::~Result()
  0.00      0.00     0.00        1     0.00     0.00  ColPack::Timer::GetWallTime()
  0.00      0.00     0.00        1     0.00     0.00  ColPack::Timer::Stop()
  0.00      0.00     0.00        1     0.00     0.00  ColPack::Timer::Start()
  0.00      0.00     0.00        1     0.00     0.00  ColPack::Timer::Timer()
  0.00      0.00     0.00        1     0.00     0.00  ColPack::Timer::~Timer()
  0.00      0.00     0.00        1     0.00     0.00  IMatrix::setVerify(bool)
  0.00      0.00     0.00        1     0.00     0.00  IMatrix::IMatrix(int, int, int, bool)
  0.00      0.00     0.00        1     0.00     0.00  IMatrix::~IMatrix()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00     529/26869       BucketPQ<MaxQueue>::get(int) [16]
                0.00    0.00     564/26869       BucketPQ<MaxQueue>::decrease(int) [18]
                0.00    0.00     621/26869       BucketPQ<MaxQueue>::top() [20]
                0.00    0.00    1058/26869       BucketPQ<MaxQueue>::increase(int) [17]
                0.00    0.00    3770/26869       BucketPQ<MaxQueue>::make_empty() [30]
                0.00    0.00    9791/26869       BucketPQ<MaxQueue>::remove(int) [9]
                0.00    0.00   10536/26869       BucketPQ<MaxQueue>::insert(int, int) [8]
[6]      0.0    0.00    0.00   26869         std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
-----------------------------------------------
                0.00    0.00     282/2182        BucketPQ<MaxQueue>::decrease(int) [18]
                0.00    0.00     529/2182        BucketPQ<MaxQueue>::increase(int) [17]
                0.00    0.00    1371/2182        BucketPQ<MaxQueue>::insert(int, int) [8]
[7]      0.0    0.00    0.00    2182         MaxQueue::opt(int, int) [7]
-----------------------------------------------
                0.00    0.00     200/1371        void RLF::pq_initializeDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int*&, BucketPQ<MaxQueue>&, bool*, int*) [31]
                0.00    0.00     360/1371        Matrix::rlf(int*) [95]
                0.00    0.00     811/1371        BucketPQ<MaxQueue>::change(int, int) [11]
[8]      0.0    0.00    0.00    1371         BucketPQ<MaxQueue>::insert(int, int) [8]
                0.00    0.00   10536/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
                0.00    0.00    1371/2182        MaxQueue::opt(int, int) [7]
-----------------------------------------------
                0.00    0.00     558/1369        Matrix::rlf(int*) [95]
                0.00    0.00     811/1369        BucketPQ<MaxQueue>::change(int, int) [11]
[9]      0.0    0.00    0.00    1369         BucketPQ<MaxQueue>::remove(int) [9]
                0.00    0.00    9791/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
-----------------------------------------------
                0.00    0.00     529/1097        int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int) [19]
                0.00    0.00     568/1097        Matrix::computedegree() [94]
[10]     0.0    0.00    0.00    1097         int const& std::max<int>(int const&, int const&) [10]
-----------------------------------------------
                0.00    0.00     282/811         BucketPQ<MaxQueue>::decrease(int) [18]
                0.00    0.00     529/811         BucketPQ<MaxQueue>::increase(int) [17]
[11]     0.0    0.00    0.00     811         BucketPQ<MaxQueue>::change(int, int) [11]
                0.00    0.00     811/1369        BucketPQ<MaxQueue>::remove(int) [9]
                0.00    0.00     811/1371        BucketPQ<MaxQueue>::insert(int, int) [8]
-----------------------------------------------
                0.00    0.00     180/806         Matrix::rlf(int*) [95]
                0.00    0.00     626/806         IRowColumnDS::computeCCS() [83]
[12]     0.0    0.00    0.00     806         IRowColumnDS::max(int, int) [12]
-----------------------------------------------
                0.00    0.00     180/709         BucketPQ<MaxQueue>::top() [20]
                0.00    0.00     529/709         BucketPQ<MaxQueue>::get(int) [16]
[13]     0.0    0.00    0.00     709         PriorityQueueItem::PriorityQueueItem(int, int) [13]
-----------------------------------------------
                0.00    0.00     626/626         void readData<IMatrix>(Configuration*, _IO_FILE*, IMatrix*) [82]
[14]     0.0    0.00    0.00     626         IRowColumnDS::setIndColEntry(int, int) [14]
-----------------------------------------------
                0.00    0.00     626/626         void readData<IMatrix>(Configuration*, _IO_FILE*, IMatrix*) [82]
[15]     0.0    0.00    0.00     626         IRowColumnDS::setIndRowEntry(int, int) [15]
-----------------------------------------------
                0.00    0.00     529/529         int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int) [19]
[16]     0.0    0.00    0.00     529         BucketPQ<MaxQueue>::get(int) [16]
                0.00    0.00     529/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
                0.00    0.00     529/709         PriorityQueueItem::PriorityQueueItem(int, int) [13]
-----------------------------------------------
                0.00    0.00     529/529         int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int) [19]
[17]     0.0    0.00    0.00     529         BucketPQ<MaxQueue>::increase(int) [17]
                0.00    0.00    1058/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
                0.00    0.00     529/2182        MaxQueue::opt(int, int) [7]
                0.00    0.00     529/811         BucketPQ<MaxQueue>::change(int, int) [11]
-----------------------------------------------
                0.00    0.00     282/282         Matrix::rlf(int*) [95]
[18]     0.0    0.00    0.00     282         BucketPQ<MaxQueue>::decrease(int) [18]
                0.00    0.00     564/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
                0.00    0.00     282/2182        MaxQueue::opt(int, int) [7]
                0.00    0.00     282/811         BucketPQ<MaxQueue>::change(int, int) [11]
-----------------------------------------------
                0.00    0.00     200/200         Matrix::rlf(int*) [95]
[19]     0.0    0.00    0.00     200         int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int) [19]
                0.00    0.00     529/529         BucketPQ<MaxQueue>::increase(int) [17]
                0.00    0.00     529/529         BucketPQ<MaxQueue>::get(int) [16]
                0.00    0.00     529/1097        int const& std::max<int>(int const&, int const&) [10]
-----------------------------------------------
                0.00    0.00     180/180         Matrix::rlf(int*) [95]
[20]     0.0    0.00    0.00     180         BucketPQ<MaxQueue>::top() [20]
                0.00    0.00     621/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
                0.00    0.00     180/709         PriorityQueueItem::PriorityQueueItem(int, int) [13]
                0.00    0.00      81/81          MaxQueue::next_op(int) [21]
-----------------------------------------------
                0.00    0.00      81/81          BucketPQ<MaxQueue>::top() [20]
[21]     0.0    0.00    0.00      81         MaxQueue::next_op(int) [21]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<int, std::allocator<int> >::~vector() [52]
                0.00    0.00       8/24          std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
                0.00    0.00       8/24          int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*) [49]
[22]     0.0    0.00    0.00      24         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [22]
-----------------------------------------------
                0.00    0.00      24/24          int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) [54]
[23]     0.0    0.00    0.00      24         std::__niter_base<int*, false>::__b(int*) [23]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<int, std::allocator<int> >::max_size() const [39]
                0.00    0.00       8/16          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [33]
[24]     0.0    0.00    0.00      16         __gnu_cxx::new_allocator<int>::max_size() const [24]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Destroy<int*>(int*, int*) [28]
[25]     0.0    0.00    0.00      16         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [25]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
                0.00    0.00       8/16          std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [47]
[26]     0.0    0.00    0.00      16         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [26]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [32]
-----------------------------------------------
                0.00    0.00      16/16          int* std::copy<int*, int*>(int*, int*, int*) [57]
[27]     0.0    0.00    0.00      16         std::__miter_base<int*, false>::__b(int*) [27]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [29]
[28]     0.0    0.00    0.00      16         void std::_Destroy<int*>(int*, int*) [28]
                0.00    0.00      16/16          void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [25]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<int, std::allocator<int> >::~vector() [52]
                0.00    0.00       8/16          std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
[29]     0.0    0.00    0.00      16         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [29]
                0.00    0.00      16/16          void std::_Destroy<int*>(int*, int*) [28]
-----------------------------------------------
                0.00    0.00       2/10          BucketPQ<MaxQueue>::BucketPQ(int, int) [58]
                0.00    0.00       8/10          void RLF::pq_initializeDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int*&, BucketPQ<MaxQueue>&, bool*, int*) [31]
[30]     0.0    0.00    0.00      10         BucketPQ<MaxQueue>::make_empty() [30]
                0.00    0.00    3770/26869       std::vector<int, std::allocator<int> >::operator[](unsigned long) [6]
-----------------------------------------------
                0.00    0.00       8/8           Matrix::rlf(int*) [95]
[31]     0.0    0.00    0.00       8         void RLF::pq_initializeDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int*&, BucketPQ<MaxQueue>&, bool*, int*) [31]
                0.00    0.00     200/1371        BucketPQ<MaxQueue>::insert(int, int) [8]
                0.00    0.00       8/10          BucketPQ<MaxQueue>::make_empty() [30]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [26]
[32]     0.0    0.00    0.00       8         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [32]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [43]
[33]     0.0    0.00    0.00       8         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [33]
                0.00    0.00       8/16          __gnu_cxx::new_allocator<int>::max_size() const [24]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator<int>::allocator() [40]
[34]     0.0    0.00    0.00       8         __gnu_cxx::new_allocator<int>::new_allocator() [34]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator<int>::~allocator() [41]
[35]     0.0    0.00    0.00       8         __gnu_cxx::new_allocator<int>::~new_allocator() [35]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::max_size() const [39]
[36]     0.0    0.00    0.00       8         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [36]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
[37]     0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::size() const [37]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
[38]     0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::capacity() const [38]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
[39]     0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::max_size() const [39]
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [36]
                0.00    0.00       8/16          __gnu_cxx::new_allocator<int>::max_size() const [24]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [44]
[40]     0.0    0.00    0.00       8         std::allocator<int>::allocator() [40]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<int>::new_allocator() [34]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [45]
[41]     0.0    0.00    0.00       8         std::allocator<int>::~allocator() [41]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<int>::~new_allocator() [35]
-----------------------------------------------
                0.00    0.00       8/8           int* std::__copy_move_a<false, int*, int*>(int*, int*, int*) [53]
[42]     0.0    0.00    0.00       8         int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [42]
-----------------------------------------------
                0.00    0.00       8/8           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*) [49]
[43]     0.0    0.00    0.00       8         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [43]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [33]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [46]
[44]     0.0    0.00    0.00       8         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [44]
                0.00    0.00       8/8           std::allocator<int>::allocator() [40]
-----------------------------------------------
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [47]
[45]     0.0    0.00    0.00       8         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [45]
                0.00    0.00       8/8           std::allocator<int>::~allocator() [41]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::vector() [51]
[46]     0.0    0.00    0.00       8         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [46]
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [44]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::~vector() [52]
[47]     0.0    0.00    0.00       8         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [47]
                0.00    0.00       8/16          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [26]
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [45]
-----------------------------------------------
                0.00    0.00       8/8           int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [55]
[48]     0.0    0.00    0.00       8         int* std::__uninitialized_copy<true>::uninitialized_copy<int*, int*>(int*, int*, int*) [48]
                0.00    0.00       8/8           int* std::copy<int*, int*>(int*, int*, int*) [57]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
[49]     0.0    0.00    0.00       8         int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*) [49]
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [43]
                0.00    0.00       8/24          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [22]
                0.00    0.00       8/8           int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&) [56]
-----------------------------------------------
                0.00    0.00       8/8           BucketPQ<MaxQueue>::BucketPQ(int, int) [58]
[50]     0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::max_size() const [39]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::capacity() const [38]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::size() const [37]
                0.00    0.00       8/8           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*) [49]
                0.00    0.00       8/24          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [22]
                0.00    0.00       8/16          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [29]
                0.00    0.00       8/16          std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [26]
-----------------------------------------------
                0.00    0.00       8/8           BucketPQ<MaxQueue>::BucketPQ(int, int) [58]
[51]     0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::vector() [51]
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [46]
-----------------------------------------------
                0.00    0.00       8/8           BucketPQ<MaxQueue>::~BucketPQ() [59]
[52]     0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::~vector() [52]
                0.00    0.00       8/24          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [22]
                0.00    0.00       8/16          void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [29]
                0.00    0.00       8/8           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [47]
-----------------------------------------------
                0.00    0.00       8/8           int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) [54]
[53]     0.0    0.00    0.00       8         int* std::__copy_move_a<false, int*, int*>(int*, int*, int*) [53]
                0.00    0.00       8/8           int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [42]
-----------------------------------------------
                0.00    0.00       8/8           int* std::copy<int*, int*>(int*, int*, int*) [57]
[54]     0.0    0.00    0.00       8         int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) [54]
                0.00    0.00      24/24          std::__niter_base<int*, false>::__b(int*) [23]
                0.00    0.00       8/8           int* std::__copy_move_a<false, int*, int*>(int*, int*, int*) [53]
-----------------------------------------------
                0.00    0.00       8/8           int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&) [56]
[55]     0.0    0.00    0.00       8         int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [55]
                0.00    0.00       8/8           int* std::__uninitialized_copy<true>::uninitialized_copy<int*, int*>(int*, int*, int*) [48]
-----------------------------------------------
                0.00    0.00       8/8           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*) [49]
[56]     0.0    0.00    0.00       8         int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&) [56]
                0.00    0.00       8/8           int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [55]
-----------------------------------------------
                0.00    0.00       8/8           int* std::__uninitialized_copy<true>::uninitialized_copy<int*, int*>(int*, int*, int*) [48]
[57]     0.0    0.00    0.00       8         int* std::copy<int*, int*>(int*, int*, int*) [57]
                0.00    0.00      16/16          std::__miter_base<int*, false>::__b(int*) [27]
                0.00    0.00       8/8           int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) [54]
-----------------------------------------------
                0.00    0.00       2/2           Matrix::rlf(int*) [95]
[58]     0.0    0.00    0.00       2         BucketPQ<MaxQueue>::BucketPQ(int, int) [58]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::vector() [51]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::reserve(unsigned long) [50]
                0.00    0.00       2/2           MaxQueue::opt_init_value(int) [60]
                0.00    0.00       2/10          BucketPQ<MaxQueue>::make_empty() [30]
-----------------------------------------------
                0.00    0.00       2/2           Matrix::rlf(int*) [95]
[59]     0.0    0.00    0.00       2         BucketPQ<MaxQueue>::~BucketPQ() [59]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::~vector() [52]
-----------------------------------------------
                0.00    0.00       2/2           BucketPQ<MaxQueue>::BucketPQ(int, int) [58]
[60]     0.0    0.00    0.00       2         MaxQueue::opt_init_value(int) [60]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[61]     0.0    0.00    0.00       1         global constructors keyed to _Z13display_usagev [61]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [75]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[62]     0.0    0.00    0.00       1         global constructors keyed to _Z16gcolor_getrusageR6rusage [62]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [76]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[63]     0.0    0.00    0.00       1         global constructors keyed to _ZN12IRowColumnDSC2Eiiib [63]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[64]     0.0    0.00    0.00       1         global constructors keyed to _ZN13MatrixUtility10loadMatrixESsP6Matrix [64]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [78]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[65]     0.0    0.00    0.00       1         global constructors keyed to _ZN6MatrixC2Eiiib [65]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [77]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[66]     0.0    0.00    0.00       1         global constructors keyed to _ZN7ColPack5TimerC2Ev [66]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [79]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [192]
[67]     0.0    0.00    0.00       1         global constructors keyed to _ZN7IMatrixC2Eiiib [67]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[68]     0.0    0.00    0.00       1         readBanner(Configuration*) [68]
                0.00    0.00       1/1           mm_read_banner(_IO_FILE*, char (*) [4]) [70]
                0.00    0.00       1/1           mm_read_mtx_crd_size(_IO_FILE*, int*, int*, int*) [71]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[69]     0.0    0.00    0.00       1         canReadFile(Configuration*) [69]
-----------------------------------------------
                0.00    0.00       1/1           readBanner(Configuration*) [68]
[70]     0.0    0.00    0.00       1         mm_read_banner(_IO_FILE*, char (*) [4]) [70]
-----------------------------------------------
                0.00    0.00       1/1           readBanner(Configuration*) [68]
[71]     0.0    0.00    0.00       1         mm_read_mtx_crd_size(_IO_FILE*, int*, int*, int*) [71]
-----------------------------------------------
                0.00    0.00       1/1           main [5]
[72]     0.0    0.00    0.00       1         processCommandLineParameters(int, char**, Configuration*) [72]
                0.00    0.00       1/1           CLI::parseMethod(char*) [92]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[73]     0.0    0.00    0.00       1         RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [73]
                0.00    0.00       1/1           Matrix::rlf(int*) [95]
                0.00    0.00       1/1           ColPack::Timer::Stop() [105]
                0.00    0.00       1/1           ColPack::Timer::GetWallTime() [104]
                0.00    0.00       1/1           RunningTimeInfo::RunningTimeInfo(int, double, double, int*) [91]
-----------------------------------------------
                0.00    0.00       1/1           main [5]
[74]     0.0    0.00    0.00       1         run(Configuration*) [74]
                0.00    0.00       1/1           Result::Result() [102]
                0.00    0.00       1/1           canReadFile(Configuration*) [69]
                0.00    0.00       1/1           Result::printInfo() [101]
                0.00    0.00       1/1           readBanner(Configuration*) [68]
                0.00    0.00       1/1           Matrix::Matrix(int, int, int, bool) [96]
                0.00    0.00       1/1           IMatrix::setVerify(bool) [109]
                0.00    0.00       1/1           ColPack::Timer::Timer() [107]
                0.00    0.00       1/1           void readData<IMatrix>(Configuration*, _IO_FILE*, IMatrix*) [82]
                0.00    0.00       1/1           ColPack::Timer::Start() [106]
                0.00    0.00       1/1           IRowColumnDS::compress() [85]
                0.00    0.00       1/1           IRowColumnDS::computeCCS() [83]
                0.00    0.00       1/1           IRowColumnDS::computeCRS() [84]
                0.00    0.00       1/1           Matrix::computedegree() [94]
                0.00    0.00       1/1           RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [73]
                0.00    0.00       1/1           Result::printMatrixInfo() [100]
                0.00    0.00       1/1           Result::printResult() [99]
                0.00    0.00       1/1           Matrix::~Matrix() [97]
                0.00    0.00       1/1           ColPack::Timer::~Timer() [108]
                0.00    0.00       1/1           Result::~Result() [103]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _Z13display_usagev [61]
[75]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [75]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _Z16gcolor_getrusageR6rusage [62]
[76]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [76]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN6MatrixC2Eiiib [65]
[77]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [77]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13MatrixUtility10loadMatrixESsP6Matrix [64]
[78]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [78]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN7ColPack5TimerC2Ev [66]
[79]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [79]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN7IMatrixC2Eiiib [67]
[80]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN12IRowColumnDSC2Eiiib [63]
[81]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[82]     0.0    0.00    0.00       1         void readData<IMatrix>(Configuration*, _IO_FILE*, IMatrix*) [82]
                0.00    0.00     626/626         IRowColumnDS::setIndRowEntry(int, int) [15]
                0.00    0.00     626/626         IRowColumnDS::setIndColEntry(int, int) [14]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[83]     0.0    0.00    0.00       1         IRowColumnDS::computeCCS() [83]
                0.00    0.00     626/806         IRowColumnDS::max(int, int) [12]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[84]     0.0    0.00    0.00       1         IRowColumnDS::computeCRS() [84]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[85]     0.0    0.00    0.00       1         IRowColumnDS::compress() [85]
-----------------------------------------------
                0.00    0.00       1/1           IMatrix::IMatrix(int, int, int, bool) [110]
[86]     0.0    0.00    0.00       1         IRowColumnDS::IRowColumnDS(int, int, int, bool) [86]
-----------------------------------------------
                0.00    0.00       1/1           IMatrix::~IMatrix() [111]
[87]     0.0    0.00    0.00       1         IRowColumnDS::~IRowColumnDS() [87]
-----------------------------------------------
                0.00    0.00       1/1           main [5]
[88]     0.0    0.00    0.00       1         Configuration::Configuration() [88]
-----------------------------------------------
                0.00    0.00       1/1           main [5]
[89]     0.0    0.00    0.00       1         Configuration::~Configuration() [89]
                0.00    0.00       1/1           Configuration::~Configuration() [90]
-----------------------------------------------
                0.00    0.00       1/1           Configuration::~Configuration() [89]
[90]     0.0    0.00    0.00       1         Configuration::~Configuration() [90]
-----------------------------------------------
                0.00    0.00       1/1           RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [73]
[91]     0.0    0.00    0.00       1         RunningTimeInfo::RunningTimeInfo(int, double, double, int*) [91]
-----------------------------------------------
                0.00    0.00       1/1           processCommandLineParameters(int, char**, Configuration*) [72]
[92]     0.0    0.00    0.00       1         CLI::parseMethod(char*) [92]
-----------------------------------------------
                0.00    0.00       1/1           Result::printInfo() [101]
[93]     0.0    0.00    0.00       1         CLI::method_to_string(CLI::ordering_method) [93]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[94]     0.0    0.00    0.00       1         Matrix::computedegree() [94]
                0.00    0.00     568/1097        int const& std::max<int>(int const&, int const&) [10]
-----------------------------------------------
                0.00    0.00       1/1           RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [73]
[95]     0.0    0.00    0.00       1         Matrix::rlf(int*) [95]
                0.00    0.00     558/1369        BucketPQ<MaxQueue>::remove(int) [9]
                0.00    0.00     360/1371        BucketPQ<MaxQueue>::insert(int, int) [8]
                0.00    0.00     282/282         BucketPQ<MaxQueue>::decrease(int) [18]
                0.00    0.00     200/200         int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int) [19]
                0.00    0.00     180/806         IRowColumnDS::max(int, int) [12]
                0.00    0.00     180/180         BucketPQ<MaxQueue>::top() [20]
                0.00    0.00       8/8           void RLF::pq_initializeDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int*&, BucketPQ<MaxQueue>&, bool*, int*) [31]
                0.00    0.00       2/2           BucketPQ<MaxQueue>::BucketPQ(int, int) [58]
                0.00    0.00       2/2           BucketPQ<MaxQueue>::~BucketPQ() [59]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[96]     0.0    0.00    0.00       1         Matrix::Matrix(int, int, int, bool) [96]
                0.00    0.00       1/1           IMatrix::IMatrix(int, int, int, bool) [110]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[97]     0.0    0.00    0.00       1         Matrix::~Matrix() [97]
                0.00    0.00       1/1           Matrix::~Matrix() [98]
-----------------------------------------------
                0.00    0.00       1/1           Matrix::~Matrix() [97]
[98]     0.0    0.00    0.00       1         Matrix::~Matrix() [98]
                0.00    0.00       1/1           IMatrix::~IMatrix() [111]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[99]     0.0    0.00    0.00       1         Result::printResult() [99]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[100]    0.0    0.00    0.00       1         Result::printMatrixInfo() [100]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[101]    0.0    0.00    0.00       1         Result::printInfo() [101]
                0.00    0.00       1/1           CLI::method_to_string(CLI::ordering_method) [93]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[102]    0.0    0.00    0.00       1         Result::Result() [102]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[103]    0.0    0.00    0.00       1         Result::~Result() [103]
-----------------------------------------------
                0.00    0.00       1/1           RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [73]
[104]    0.0    0.00    0.00       1         ColPack::Timer::GetWallTime() [104]
-----------------------------------------------
                0.00    0.00       1/1           RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [73]
[105]    0.0    0.00    0.00       1         ColPack::Timer::Stop() [105]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[106]    0.0    0.00    0.00       1         ColPack::Timer::Start() [106]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[107]    0.0    0.00    0.00       1         ColPack::Timer::Timer() [107]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[108]    0.0    0.00    0.00       1         ColPack::Timer::~Timer() [108]
-----------------------------------------------
                0.00    0.00       1/1           run(Configuration*) [74]
[109]    0.0    0.00    0.00       1         IMatrix::setVerify(bool) [109]
-----------------------------------------------
                0.00    0.00       1/1           Matrix::Matrix(int, int, int, bool) [96]
[110]    0.0    0.00    0.00       1         IMatrix::IMatrix(int, int, int, bool) [110]
                0.00    0.00       1/1           IRowColumnDS::IRowColumnDS(int, int, int, bool) [86]
-----------------------------------------------
                0.00    0.00       1/1           Matrix::~Matrix() [98]
[111]    0.0    0.00    0.00       1         IMatrix::~IMatrix() [111]
                0.00    0.00       1/1           IRowColumnDS::~IRowColumnDS() [87]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [61] global constructors keyed to _Z13display_usagev [93] CLI::method_to_string(CLI::ordering_method) [34] __gnu_cxx::new_allocator<int>::new_allocator()
  [62] global constructors keyed to _Z16gcolor_getrusageR6rusage [19] int RLF::pq_updateDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int, int, int*, int*, int*, int*, bool*, int*&, int*, BucketPQ<MaxQueue>&, int*, int) [35] __gnu_cxx::new_allocator<int>::~new_allocator()
  [63] global constructors keyed to _ZN12IRowColumnDSC2Eiiib [31] void RLF::pq_initializeDegreesToUVertices<BucketPQ<MaxQueue>, int*>(int, int*&, BucketPQ<MaxQueue>&, bool*, int*) [24] __gnu_cxx::new_allocator<int>::max_size() const
  [64] global constructors keyed to _ZN13MatrixUtility10loadMatrixESsP6Matrix [94] Matrix::computedegree() [36] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  [65] global constructors keyed to _ZN6MatrixC2Eiiib [95] Matrix::rlf(int*) [37] std::vector<int, std::allocator<int> >::size() const
  [66] global constructors keyed to _ZN7ColPack5TimerC2Ev [96] Matrix::Matrix(int, int, int, bool) [38] std::vector<int, std::allocator<int> >::capacity() const
  [67] global constructors keyed to _ZN7IMatrixC2Eiiib [97] Matrix::~Matrix() [39] std::vector<int, std::allocator<int> >::max_size() const
  [68] readBanner(Configuration*) [98] Matrix::~Matrix()  [40] std::allocator<int>::allocator()
  [69] canReadFile(Configuration*) [99] Result::printResult() [41] std::allocator<int>::~allocator()
  [70] mm_read_banner(_IO_FILE*, char (*) [4]) [100] Result::printMatrixInfo() [42] int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  [71] mm_read_mtx_crd_size(_IO_FILE*, int*, int*, int*) [101] Result::printInfo() [25] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  [72] processCommandLineParameters(int, char**, Configuration*) [102] Result::Result() [43] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  [73] RunningTimeInfo runOrderingAndColoringAlgorithm<IMatrix, ColPack::Timer>(Configuration*, IMatrix*, ColPack::Timer&) [103] Result::~Result() [44] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  [74] run(Configuration*)   [104] ColPack::Timer::GetWallTime() [45] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  [75] __static_initialization_and_destruction_0(int, int) [105] ColPack::Timer::Stop() [26] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  [76] __static_initialization_and_destruction_0(int, int) [106] ColPack::Timer::Start() [22] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  [77] __static_initialization_and_destruction_0(int, int) [107] ColPack::Timer::Timer() [46] std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  [78] __static_initialization_and_destruction_0(int, int) [108] ColPack::Timer::~Timer() [47] std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  [79] __static_initialization_and_destruction_0(int, int) [109] IMatrix::setVerify(bool) [27] std::__miter_base<int*, false>::__b(int*)
  [80] __static_initialization_and_destruction_0(int, int) [110] IMatrix::IMatrix(int, int, int, bool) [23] std::__niter_base<int*, false>::__b(int*)
  [81] __static_initialization_and_destruction_0(int, int) [111] IMatrix::~IMatrix() [48] int* std::__uninitialized_copy<true>::uninitialized_copy<int*, int*>(int*, int*, int*)
  [82] void readData<IMatrix>(Configuration*, _IO_FILE*, IMatrix*) [30] BucketPQ<MaxQueue>::make_empty() [49] int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*)
  [83] IRowColumnDS::computeCCS() [16] BucketPQ<MaxQueue>::get(int) [50] std::vector<int, std::allocator<int> >::reserve(unsigned long)
  [84] IRowColumnDS::computeCRS() [20] BucketPQ<MaxQueue>::top() [51] std::vector<int, std::allocator<int> >::vector()
  [14] IRowColumnDS::setIndColEntry(int, int) [11] BucketPQ<MaxQueue>::change(int, int) [52] std::vector<int, std::allocator<int> >::~vector()
  [15] IRowColumnDS::setIndRowEntry(int, int) [8] BucketPQ<MaxQueue>::insert(int, int) [6] std::vector<int, std::allocator<int> >::operator[](unsigned long)
  [12] IRowColumnDS::max(int, int) [9] BucketPQ<MaxQueue>::remove(int) [53] int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
  [85] IRowColumnDS::compress() [18] BucketPQ<MaxQueue>::decrease(int) [54] int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
  [86] IRowColumnDS::IRowColumnDS(int, int, int, bool) [17] BucketPQ<MaxQueue>::increase(int) [55] int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  [87] IRowColumnDS::~IRowColumnDS() [58] BucketPQ<MaxQueue>::BucketPQ(int, int) [56] int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
  [88] Configuration::Configuration() [59] BucketPQ<MaxQueue>::~BucketPQ() [10] int const& std::max<int>(int const&, int const&)
  [89] Configuration::~Configuration() [60] MaxQueue::opt_init_value(int) [57] int* std::copy<int*, int*>(int*, int*, int*)
  [90] Configuration::~Configuration() [7] MaxQueue::opt(int, int) [28] void std::_Destroy<int*>(int*, int*)
  [91] RunningTimeInfo::RunningTimeInfo(int, double, double, int*) [21] MaxQueue::next_op(int) [29] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  [13] PriorityQueueItem::PriorityQueueItem(int, int) [32] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  [92] CLI::parseMethod(char*) [33] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
