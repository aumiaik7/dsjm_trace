# Makefile.in generated by automake 1.11.1 from Makefile.am.
# test/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/dsjm
pkgincludedir = $(includedir)/dsjm
pkglibdir = $(libdir)/dsjm
pkglibexecdir = $(libexecdir)/dsjm
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)
check_PROGRAMS = $(am__EXEEXT_4) $(am__EXEEXT_5)
TESTS = unittest$(EXEEXT)
subdir = test/src
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = MatrixMarket$(EXEEXT)
am__EXEEXT_2 = Verify$(EXEEXT)
am__EXEEXT_3 = TrimOne$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
am__EXEEXT_4 = unittest$(EXEEXT)
am__EXEEXT_5 = ApplicationApp$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = ApplicationApp-mmio.$(OBJEXT) \
	ApplicationApp-Matrix.$(OBJEXT) ApplicationApp-CLI.$(OBJEXT) \
	ApplicationApp-Utility.$(OBJEXT) \
	ApplicationApp-Timer.$(OBJEXT) \
	ApplicationApp-IMatrix.$(OBJEXT) \
	ApplicationApp-Configuration.$(OBJEXT) \
	ApplicationApp-IRowColumnDS.$(OBJEXT)
am_ApplicationApp_OBJECTS = ApplicationApp-ApplicationApp.$(OBJEXT) \
	ApplicationApp-ApplicationTest.$(OBJEXT) $(am__objects_1)
ApplicationApp_OBJECTS = $(am_ApplicationApp_OBJECTS)
ApplicationApp_LDADD = $(LDADD)
ApplicationApp_LINK = $(CXXLD) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) \
	$(ApplicationApp_LDFLAGS) $(LDFLAGS) -o $@
am_MatrixMarket_OBJECTS = MatrixMarket-mmio.$(OBJEXT) \
	MatrixMarket-example_read.$(OBJEXT)
MatrixMarket_OBJECTS = $(am_MatrixMarket_OBJECTS)
MatrixMarket_LDADD = $(LDADD)
MatrixMarket_LINK = $(CXXLD) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_TrimOne_OBJECTS = trimone.$(OBJEXT)
TrimOne_OBJECTS = $(am_TrimOne_OBJECTS)
TrimOne_LDADD = $(LDADD)
am_Verify_OBJECTS = Verify-verify.$(OBJEXT)
Verify_OBJECTS = $(am_Verify_OBJECTS)
Verify_LDADD = $(LDADD)
Verify_LINK = $(CXXLD) $(Verify_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = unittest-mmio.$(OBJEXT) unittest-Matrix.$(OBJEXT) \
	unittest-CLI.$(OBJEXT) unittest-Utility.$(OBJEXT) \
	unittest-Timer.$(OBJEXT) unittest-IMatrix.$(OBJEXT) \
	unittest-Configuration.$(OBJEXT) \
	unittest-IRowColumnDS.$(OBJEXT)
am__objects_3 = unittest-MatrixTest.$(OBJEXT) \
	unittest-unittest.$(OBJEXT) unittest-ApplicationTest.$(OBJEXT) \
	unittest-HeapPQTest.$(OBJEXT) unittest-BucketPQTest.$(OBJEXT)
am_unittest_OBJECTS = $(am__objects_2) $(am__objects_3)
unittest_OBJECTS = $(am_unittest_OBJECTS)
unittest_LDADD = $(LDADD)
unittest_LINK = $(CXXLD) $(unittest_CXXFLAGS) $(CXXFLAGS) \
	$(unittest_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(ApplicationApp_SOURCES) $(MatrixMarket_SOURCES) \
	$(TrimOne_SOURCES) $(Verify_SOURCES) $(unittest_SOURCES)
DIST_SOURCES = $(ApplicationApp_SOURCES) $(MatrixMarket_SOURCES) \
	$(TrimOne_SOURCES) $(Verify_SOURCES) $(unittest_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/missing --run tar
AUTOCONF = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = /usr/bin/cppunit-config
CPPUNIT_LIBS = -lcppunit -ldl
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"dsjm\" -DVERSION=\"0.2\"
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = dsjm
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.2
abs_builddir = /home/khanai/Study/Fall_2016/dsjm_cleanup/test/src
abs_srcdir = /home/khanai/Study/Fall_2016/dsjm_cleanup/test/src
abs_top_builddir = /home/khanai/Study/Fall_2016/dsjm_cleanup
abs_top_srcdir = /home/khanai/Study/Fall_2016/dsjm_cleanup
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/khanai/Study/Fall_2016/dsjm_cleanup/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#DSJM_FLAGS = $(EXTRA_FLAGS)  -O3
#AM_CPPFLAGS =  $(DSJM_FLAGS) 
#AM_LDFLAGS = $(DSJM_FLAGS)
#AM_CXXFLAGS= -O3
EXTRA_DIST = MatrixTest.h ApplicationTest.h HeapPQTest.hh
CORE_SOURCE_FILES = $(top_srcdir)/src/mmio.cpp $(top_srcdir)/src/Matrix.cpp  $(top_srcdir)/src/CLI.cpp $(top_srcdir)/src/Utility.cc $(top_srcdir)/src/Timer.cpp  $(top_srcdir)/src/IMatrix.cc  $(top_srcdir)/src/Configuration.cc  $(top_srcdir)/src/IRowColumnDS.cc 

# Include Directory for compilation
INCLUDES = -I$(top_srcdir)/src
#INCLUDE_DIR = $(top_builddir)/src
#INCLUDE_HEADERS = mmio.h Matrix.h CLI.h

#MAIN_SOURCE_FILES = $(top_srcdir)/src/mmio.cpp $(top_srcdir)/src/Matrix.cpp $(top_srcdir)/src/CLI.cpp $(top_srcdir)/src/Utility.cc $(top_srcdir)/src/IMatrix.cc $(top_srcdir)/src/NNZTag.cc
TEST_SOURCE_FILES = MatrixTest.cpp unittest.cpp ApplicationTest.cpp HeapPQTest.cc BucketPQTest.cc
APPLICATION_TESTS = ApplicationApp
TUTORIAL = MatrixMarket
ApplicationApp_SOURCES = ApplicationApp.cpp  ApplicationTest.cpp $(CORE_SOURCE_FILES)
ApplicationApp_CXXFLAGS = $(CPPUNIT_CFLAGS) $(LOG4CPP_CFLAGS)
ApplicationApp_LDFLAGS = $(CPPUNIT_LIBS) $(LOG4CPP_LIBS)
unittest_SOURCES = $(CORE_SOURCE_FILES) $(TEST_SOURCE_FILES)
unittest_CXXFLAGS = $(CPPUNIT_CFLAGS) $(LOG4CPP_CFLAGS)
unittest_LDFLAGS = $(CPPUNIT_LIBS) $(LOG4CPP_LIBS)
MatrixMarket_SOURCES = $(top_builddir)/src/mmio.cpp  example_read.cpp
MatrixMarket_CXXFLAGS = $(CPP_PROFILING_FLAGS)
VERIFY = Verify
Verify_SOURCES = verify.cpp
Verify_CXXFLAGS = $(CPP_PROFILING_FLAGS)
TRIMONE = TrimOne
TrimOne_SOURCES = trimone.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
ApplicationApp$(EXEEXT): $(ApplicationApp_OBJECTS) $(ApplicationApp_DEPENDENCIES) 
	@rm -f ApplicationApp$(EXEEXT)
	$(ApplicationApp_LINK) $(ApplicationApp_OBJECTS) $(ApplicationApp_LDADD) $(LIBS)
MatrixMarket$(EXEEXT): $(MatrixMarket_OBJECTS) $(MatrixMarket_DEPENDENCIES) 
	@rm -f MatrixMarket$(EXEEXT)
	$(MatrixMarket_LINK) $(MatrixMarket_OBJECTS) $(MatrixMarket_LDADD) $(LIBS)
TrimOne$(EXEEXT): $(TrimOne_OBJECTS) $(TrimOne_DEPENDENCIES) 
	@rm -f TrimOne$(EXEEXT)
	$(CXXLINK) $(TrimOne_OBJECTS) $(TrimOne_LDADD) $(LIBS)
Verify$(EXEEXT): $(Verify_OBJECTS) $(Verify_DEPENDENCIES) 
	@rm -f Verify$(EXEEXT)
	$(Verify_LINK) $(Verify_OBJECTS) $(Verify_LDADD) $(LIBS)
unittest$(EXEEXT): $(unittest_OBJECTS) $(unittest_DEPENDENCIES) 
	@rm -f unittest$(EXEEXT)
	$(unittest_LINK) $(unittest_OBJECTS) $(unittest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ApplicationApp-ApplicationApp.Po
include ./$(DEPDIR)/ApplicationApp-ApplicationTest.Po
include ./$(DEPDIR)/ApplicationApp-CLI.Po
include ./$(DEPDIR)/ApplicationApp-Configuration.Po
include ./$(DEPDIR)/ApplicationApp-IMatrix.Po
include ./$(DEPDIR)/ApplicationApp-IRowColumnDS.Po
include ./$(DEPDIR)/ApplicationApp-Matrix.Po
include ./$(DEPDIR)/ApplicationApp-Timer.Po
include ./$(DEPDIR)/ApplicationApp-Utility.Po
include ./$(DEPDIR)/ApplicationApp-mmio.Po
include ./$(DEPDIR)/MatrixMarket-example_read.Po
include ./$(DEPDIR)/MatrixMarket-mmio.Po
include ./$(DEPDIR)/Verify-verify.Po
include ./$(DEPDIR)/trimone.Po
include ./$(DEPDIR)/unittest-ApplicationTest.Po
include ./$(DEPDIR)/unittest-BucketPQTest.Po
include ./$(DEPDIR)/unittest-CLI.Po
include ./$(DEPDIR)/unittest-Configuration.Po
include ./$(DEPDIR)/unittest-HeapPQTest.Po
include ./$(DEPDIR)/unittest-IMatrix.Po
include ./$(DEPDIR)/unittest-IRowColumnDS.Po
include ./$(DEPDIR)/unittest-Matrix.Po
include ./$(DEPDIR)/unittest-MatrixTest.Po
include ./$(DEPDIR)/unittest-Timer.Po
include ./$(DEPDIR)/unittest-Utility.Po
include ./$(DEPDIR)/unittest-mmio.Po
include ./$(DEPDIR)/unittest-unittest.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ApplicationApp-ApplicationApp.o: ApplicationApp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-ApplicationApp.o -MD -MP -MF $(DEPDIR)/ApplicationApp-ApplicationApp.Tpo -c -o ApplicationApp-ApplicationApp.o `test -f 'ApplicationApp.cpp' || echo '$(srcdir)/'`ApplicationApp.cpp
	$(am__mv) $(DEPDIR)/ApplicationApp-ApplicationApp.Tpo $(DEPDIR)/ApplicationApp-ApplicationApp.Po
#	source='ApplicationApp.cpp' object='ApplicationApp-ApplicationApp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-ApplicationApp.o `test -f 'ApplicationApp.cpp' || echo '$(srcdir)/'`ApplicationApp.cpp

ApplicationApp-ApplicationApp.obj: ApplicationApp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-ApplicationApp.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-ApplicationApp.Tpo -c -o ApplicationApp-ApplicationApp.obj `if test -f 'ApplicationApp.cpp'; then $(CYGPATH_W) 'ApplicationApp.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationApp.cpp'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-ApplicationApp.Tpo $(DEPDIR)/ApplicationApp-ApplicationApp.Po
#	source='ApplicationApp.cpp' object='ApplicationApp-ApplicationApp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-ApplicationApp.obj `if test -f 'ApplicationApp.cpp'; then $(CYGPATH_W) 'ApplicationApp.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationApp.cpp'; fi`

ApplicationApp-ApplicationTest.o: ApplicationTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-ApplicationTest.o -MD -MP -MF $(DEPDIR)/ApplicationApp-ApplicationTest.Tpo -c -o ApplicationApp-ApplicationTest.o `test -f 'ApplicationTest.cpp' || echo '$(srcdir)/'`ApplicationTest.cpp
	$(am__mv) $(DEPDIR)/ApplicationApp-ApplicationTest.Tpo $(DEPDIR)/ApplicationApp-ApplicationTest.Po
#	source='ApplicationTest.cpp' object='ApplicationApp-ApplicationTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-ApplicationTest.o `test -f 'ApplicationTest.cpp' || echo '$(srcdir)/'`ApplicationTest.cpp

ApplicationApp-ApplicationTest.obj: ApplicationTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-ApplicationTest.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-ApplicationTest.Tpo -c -o ApplicationApp-ApplicationTest.obj `if test -f 'ApplicationTest.cpp'; then $(CYGPATH_W) 'ApplicationTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-ApplicationTest.Tpo $(DEPDIR)/ApplicationApp-ApplicationTest.Po
#	source='ApplicationTest.cpp' object='ApplicationApp-ApplicationTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-ApplicationTest.obj `if test -f 'ApplicationTest.cpp'; then $(CYGPATH_W) 'ApplicationTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationTest.cpp'; fi`

ApplicationApp-mmio.o: $(top_srcdir)/src/mmio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-mmio.o -MD -MP -MF $(DEPDIR)/ApplicationApp-mmio.Tpo -c -o ApplicationApp-mmio.o `test -f '$(top_srcdir)/src/mmio.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/mmio.cpp
	$(am__mv) $(DEPDIR)/ApplicationApp-mmio.Tpo $(DEPDIR)/ApplicationApp-mmio.Po
#	source='$(top_srcdir)/src/mmio.cpp' object='ApplicationApp-mmio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-mmio.o `test -f '$(top_srcdir)/src/mmio.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/mmio.cpp

ApplicationApp-mmio.obj: $(top_srcdir)/src/mmio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-mmio.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-mmio.Tpo -c -o ApplicationApp-mmio.obj `if test -f '$(top_srcdir)/src/mmio.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/mmio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mmio.cpp'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-mmio.Tpo $(DEPDIR)/ApplicationApp-mmio.Po
#	source='$(top_srcdir)/src/mmio.cpp' object='ApplicationApp-mmio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-mmio.obj `if test -f '$(top_srcdir)/src/mmio.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/mmio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mmio.cpp'; fi`

ApplicationApp-Matrix.o: $(top_srcdir)/src/Matrix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Matrix.o -MD -MP -MF $(DEPDIR)/ApplicationApp-Matrix.Tpo -c -o ApplicationApp-Matrix.o `test -f '$(top_srcdir)/src/Matrix.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Matrix.cpp
	$(am__mv) $(DEPDIR)/ApplicationApp-Matrix.Tpo $(DEPDIR)/ApplicationApp-Matrix.Po
#	source='$(top_srcdir)/src/Matrix.cpp' object='ApplicationApp-Matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Matrix.o `test -f '$(top_srcdir)/src/Matrix.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Matrix.cpp

ApplicationApp-Matrix.obj: $(top_srcdir)/src/Matrix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Matrix.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-Matrix.Tpo -c -o ApplicationApp-Matrix.obj `if test -f '$(top_srcdir)/src/Matrix.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Matrix.cpp'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-Matrix.Tpo $(DEPDIR)/ApplicationApp-Matrix.Po
#	source='$(top_srcdir)/src/Matrix.cpp' object='ApplicationApp-Matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Matrix.obj `if test -f '$(top_srcdir)/src/Matrix.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Matrix.cpp'; fi`

ApplicationApp-CLI.o: $(top_srcdir)/src/CLI.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-CLI.o -MD -MP -MF $(DEPDIR)/ApplicationApp-CLI.Tpo -c -o ApplicationApp-CLI.o `test -f '$(top_srcdir)/src/CLI.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/CLI.cpp
	$(am__mv) $(DEPDIR)/ApplicationApp-CLI.Tpo $(DEPDIR)/ApplicationApp-CLI.Po
#	source='$(top_srcdir)/src/CLI.cpp' object='ApplicationApp-CLI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-CLI.o `test -f '$(top_srcdir)/src/CLI.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/CLI.cpp

ApplicationApp-CLI.obj: $(top_srcdir)/src/CLI.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-CLI.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-CLI.Tpo -c -o ApplicationApp-CLI.obj `if test -f '$(top_srcdir)/src/CLI.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/CLI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/CLI.cpp'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-CLI.Tpo $(DEPDIR)/ApplicationApp-CLI.Po
#	source='$(top_srcdir)/src/CLI.cpp' object='ApplicationApp-CLI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-CLI.obj `if test -f '$(top_srcdir)/src/CLI.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/CLI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/CLI.cpp'; fi`

ApplicationApp-Utility.o: $(top_srcdir)/src/Utility.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Utility.o -MD -MP -MF $(DEPDIR)/ApplicationApp-Utility.Tpo -c -o ApplicationApp-Utility.o `test -f '$(top_srcdir)/src/Utility.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Utility.cc
	$(am__mv) $(DEPDIR)/ApplicationApp-Utility.Tpo $(DEPDIR)/ApplicationApp-Utility.Po
#	source='$(top_srcdir)/src/Utility.cc' object='ApplicationApp-Utility.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Utility.o `test -f '$(top_srcdir)/src/Utility.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Utility.cc

ApplicationApp-Utility.obj: $(top_srcdir)/src/Utility.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Utility.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-Utility.Tpo -c -o ApplicationApp-Utility.obj `if test -f '$(top_srcdir)/src/Utility.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Utility.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Utility.cc'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-Utility.Tpo $(DEPDIR)/ApplicationApp-Utility.Po
#	source='$(top_srcdir)/src/Utility.cc' object='ApplicationApp-Utility.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Utility.obj `if test -f '$(top_srcdir)/src/Utility.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Utility.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Utility.cc'; fi`

ApplicationApp-Timer.o: $(top_srcdir)/src/Timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Timer.o -MD -MP -MF $(DEPDIR)/ApplicationApp-Timer.Tpo -c -o ApplicationApp-Timer.o `test -f '$(top_srcdir)/src/Timer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Timer.cpp
	$(am__mv) $(DEPDIR)/ApplicationApp-Timer.Tpo $(DEPDIR)/ApplicationApp-Timer.Po
#	source='$(top_srcdir)/src/Timer.cpp' object='ApplicationApp-Timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Timer.o `test -f '$(top_srcdir)/src/Timer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Timer.cpp

ApplicationApp-Timer.obj: $(top_srcdir)/src/Timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Timer.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-Timer.Tpo -c -o ApplicationApp-Timer.obj `if test -f '$(top_srcdir)/src/Timer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Timer.cpp'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-Timer.Tpo $(DEPDIR)/ApplicationApp-Timer.Po
#	source='$(top_srcdir)/src/Timer.cpp' object='ApplicationApp-Timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Timer.obj `if test -f '$(top_srcdir)/src/Timer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Timer.cpp'; fi`

ApplicationApp-IMatrix.o: $(top_srcdir)/src/IMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-IMatrix.o -MD -MP -MF $(DEPDIR)/ApplicationApp-IMatrix.Tpo -c -o ApplicationApp-IMatrix.o `test -f '$(top_srcdir)/src/IMatrix.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IMatrix.cc
	$(am__mv) $(DEPDIR)/ApplicationApp-IMatrix.Tpo $(DEPDIR)/ApplicationApp-IMatrix.Po
#	source='$(top_srcdir)/src/IMatrix.cc' object='ApplicationApp-IMatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-IMatrix.o `test -f '$(top_srcdir)/src/IMatrix.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IMatrix.cc

ApplicationApp-IMatrix.obj: $(top_srcdir)/src/IMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-IMatrix.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-IMatrix.Tpo -c -o ApplicationApp-IMatrix.obj `if test -f '$(top_srcdir)/src/IMatrix.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IMatrix.cc'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-IMatrix.Tpo $(DEPDIR)/ApplicationApp-IMatrix.Po
#	source='$(top_srcdir)/src/IMatrix.cc' object='ApplicationApp-IMatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-IMatrix.obj `if test -f '$(top_srcdir)/src/IMatrix.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IMatrix.cc'; fi`

ApplicationApp-Configuration.o: $(top_srcdir)/src/Configuration.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Configuration.o -MD -MP -MF $(DEPDIR)/ApplicationApp-Configuration.Tpo -c -o ApplicationApp-Configuration.o `test -f '$(top_srcdir)/src/Configuration.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Configuration.cc
	$(am__mv) $(DEPDIR)/ApplicationApp-Configuration.Tpo $(DEPDIR)/ApplicationApp-Configuration.Po
#	source='$(top_srcdir)/src/Configuration.cc' object='ApplicationApp-Configuration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Configuration.o `test -f '$(top_srcdir)/src/Configuration.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Configuration.cc

ApplicationApp-Configuration.obj: $(top_srcdir)/src/Configuration.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-Configuration.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-Configuration.Tpo -c -o ApplicationApp-Configuration.obj `if test -f '$(top_srcdir)/src/Configuration.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Configuration.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Configuration.cc'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-Configuration.Tpo $(DEPDIR)/ApplicationApp-Configuration.Po
#	source='$(top_srcdir)/src/Configuration.cc' object='ApplicationApp-Configuration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-Configuration.obj `if test -f '$(top_srcdir)/src/Configuration.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Configuration.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Configuration.cc'; fi`

ApplicationApp-IRowColumnDS.o: $(top_srcdir)/src/IRowColumnDS.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-IRowColumnDS.o -MD -MP -MF $(DEPDIR)/ApplicationApp-IRowColumnDS.Tpo -c -o ApplicationApp-IRowColumnDS.o `test -f '$(top_srcdir)/src/IRowColumnDS.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IRowColumnDS.cc
	$(am__mv) $(DEPDIR)/ApplicationApp-IRowColumnDS.Tpo $(DEPDIR)/ApplicationApp-IRowColumnDS.Po
#	source='$(top_srcdir)/src/IRowColumnDS.cc' object='ApplicationApp-IRowColumnDS.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-IRowColumnDS.o `test -f '$(top_srcdir)/src/IRowColumnDS.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IRowColumnDS.cc

ApplicationApp-IRowColumnDS.obj: $(top_srcdir)/src/IRowColumnDS.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -MT ApplicationApp-IRowColumnDS.obj -MD -MP -MF $(DEPDIR)/ApplicationApp-IRowColumnDS.Tpo -c -o ApplicationApp-IRowColumnDS.obj `if test -f '$(top_srcdir)/src/IRowColumnDS.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IRowColumnDS.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IRowColumnDS.cc'; fi`
	$(am__mv) $(DEPDIR)/ApplicationApp-IRowColumnDS.Tpo $(DEPDIR)/ApplicationApp-IRowColumnDS.Po
#	source='$(top_srcdir)/src/IRowColumnDS.cc' object='ApplicationApp-IRowColumnDS.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ApplicationApp_CXXFLAGS) $(CXXFLAGS) -c -o ApplicationApp-IRowColumnDS.obj `if test -f '$(top_srcdir)/src/IRowColumnDS.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IRowColumnDS.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IRowColumnDS.cc'; fi`

MatrixMarket-mmio.o: $(top_builddir)/src/mmio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -MT MatrixMarket-mmio.o -MD -MP -MF $(DEPDIR)/MatrixMarket-mmio.Tpo -c -o MatrixMarket-mmio.o `test -f '$(top_builddir)/src/mmio.cpp' || echo '$(srcdir)/'`$(top_builddir)/src/mmio.cpp
	$(am__mv) $(DEPDIR)/MatrixMarket-mmio.Tpo $(DEPDIR)/MatrixMarket-mmio.Po
#	source='$(top_builddir)/src/mmio.cpp' object='MatrixMarket-mmio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -c -o MatrixMarket-mmio.o `test -f '$(top_builddir)/src/mmio.cpp' || echo '$(srcdir)/'`$(top_builddir)/src/mmio.cpp

MatrixMarket-mmio.obj: $(top_builddir)/src/mmio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -MT MatrixMarket-mmio.obj -MD -MP -MF $(DEPDIR)/MatrixMarket-mmio.Tpo -c -o MatrixMarket-mmio.obj `if test -f '$(top_builddir)/src/mmio.cpp'; then $(CYGPATH_W) '$(top_builddir)/src/mmio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/mmio.cpp'; fi`
	$(am__mv) $(DEPDIR)/MatrixMarket-mmio.Tpo $(DEPDIR)/MatrixMarket-mmio.Po
#	source='$(top_builddir)/src/mmio.cpp' object='MatrixMarket-mmio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -c -o MatrixMarket-mmio.obj `if test -f '$(top_builddir)/src/mmio.cpp'; then $(CYGPATH_W) '$(top_builddir)/src/mmio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/mmio.cpp'; fi`

MatrixMarket-example_read.o: example_read.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -MT MatrixMarket-example_read.o -MD -MP -MF $(DEPDIR)/MatrixMarket-example_read.Tpo -c -o MatrixMarket-example_read.o `test -f 'example_read.cpp' || echo '$(srcdir)/'`example_read.cpp
	$(am__mv) $(DEPDIR)/MatrixMarket-example_read.Tpo $(DEPDIR)/MatrixMarket-example_read.Po
#	source='example_read.cpp' object='MatrixMarket-example_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -c -o MatrixMarket-example_read.o `test -f 'example_read.cpp' || echo '$(srcdir)/'`example_read.cpp

MatrixMarket-example_read.obj: example_read.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -MT MatrixMarket-example_read.obj -MD -MP -MF $(DEPDIR)/MatrixMarket-example_read.Tpo -c -o MatrixMarket-example_read.obj `if test -f 'example_read.cpp'; then $(CYGPATH_W) 'example_read.cpp'; else $(CYGPATH_W) '$(srcdir)/example_read.cpp'; fi`
	$(am__mv) $(DEPDIR)/MatrixMarket-example_read.Tpo $(DEPDIR)/MatrixMarket-example_read.Po
#	source='example_read.cpp' object='MatrixMarket-example_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MatrixMarket_CXXFLAGS) $(CXXFLAGS) -c -o MatrixMarket-example_read.obj `if test -f 'example_read.cpp'; then $(CYGPATH_W) 'example_read.cpp'; else $(CYGPATH_W) '$(srcdir)/example_read.cpp'; fi`

Verify-verify.o: verify.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Verify_CXXFLAGS) $(CXXFLAGS) -MT Verify-verify.o -MD -MP -MF $(DEPDIR)/Verify-verify.Tpo -c -o Verify-verify.o `test -f 'verify.cpp' || echo '$(srcdir)/'`verify.cpp
	$(am__mv) $(DEPDIR)/Verify-verify.Tpo $(DEPDIR)/Verify-verify.Po
#	source='verify.cpp' object='Verify-verify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Verify_CXXFLAGS) $(CXXFLAGS) -c -o Verify-verify.o `test -f 'verify.cpp' || echo '$(srcdir)/'`verify.cpp

Verify-verify.obj: verify.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Verify_CXXFLAGS) $(CXXFLAGS) -MT Verify-verify.obj -MD -MP -MF $(DEPDIR)/Verify-verify.Tpo -c -o Verify-verify.obj `if test -f 'verify.cpp'; then $(CYGPATH_W) 'verify.cpp'; else $(CYGPATH_W) '$(srcdir)/verify.cpp'; fi`
	$(am__mv) $(DEPDIR)/Verify-verify.Tpo $(DEPDIR)/Verify-verify.Po
#	source='verify.cpp' object='Verify-verify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Verify_CXXFLAGS) $(CXXFLAGS) -c -o Verify-verify.obj `if test -f 'verify.cpp'; then $(CYGPATH_W) 'verify.cpp'; else $(CYGPATH_W) '$(srcdir)/verify.cpp'; fi`

unittest-mmio.o: $(top_srcdir)/src/mmio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-mmio.o -MD -MP -MF $(DEPDIR)/unittest-mmio.Tpo -c -o unittest-mmio.o `test -f '$(top_srcdir)/src/mmio.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/mmio.cpp
	$(am__mv) $(DEPDIR)/unittest-mmio.Tpo $(DEPDIR)/unittest-mmio.Po
#	source='$(top_srcdir)/src/mmio.cpp' object='unittest-mmio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-mmio.o `test -f '$(top_srcdir)/src/mmio.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/mmio.cpp

unittest-mmio.obj: $(top_srcdir)/src/mmio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-mmio.obj -MD -MP -MF $(DEPDIR)/unittest-mmio.Tpo -c -o unittest-mmio.obj `if test -f '$(top_srcdir)/src/mmio.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/mmio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mmio.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-mmio.Tpo $(DEPDIR)/unittest-mmio.Po
#	source='$(top_srcdir)/src/mmio.cpp' object='unittest-mmio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-mmio.obj `if test -f '$(top_srcdir)/src/mmio.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/mmio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/mmio.cpp'; fi`

unittest-Matrix.o: $(top_srcdir)/src/Matrix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Matrix.o -MD -MP -MF $(DEPDIR)/unittest-Matrix.Tpo -c -o unittest-Matrix.o `test -f '$(top_srcdir)/src/Matrix.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Matrix.cpp
	$(am__mv) $(DEPDIR)/unittest-Matrix.Tpo $(DEPDIR)/unittest-Matrix.Po
#	source='$(top_srcdir)/src/Matrix.cpp' object='unittest-Matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Matrix.o `test -f '$(top_srcdir)/src/Matrix.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Matrix.cpp

unittest-Matrix.obj: $(top_srcdir)/src/Matrix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Matrix.obj -MD -MP -MF $(DEPDIR)/unittest-Matrix.Tpo -c -o unittest-Matrix.obj `if test -f '$(top_srcdir)/src/Matrix.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Matrix.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-Matrix.Tpo $(DEPDIR)/unittest-Matrix.Po
#	source='$(top_srcdir)/src/Matrix.cpp' object='unittest-Matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Matrix.obj `if test -f '$(top_srcdir)/src/Matrix.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Matrix.cpp'; fi`

unittest-CLI.o: $(top_srcdir)/src/CLI.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-CLI.o -MD -MP -MF $(DEPDIR)/unittest-CLI.Tpo -c -o unittest-CLI.o `test -f '$(top_srcdir)/src/CLI.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/CLI.cpp
	$(am__mv) $(DEPDIR)/unittest-CLI.Tpo $(DEPDIR)/unittest-CLI.Po
#	source='$(top_srcdir)/src/CLI.cpp' object='unittest-CLI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-CLI.o `test -f '$(top_srcdir)/src/CLI.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/CLI.cpp

unittest-CLI.obj: $(top_srcdir)/src/CLI.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-CLI.obj -MD -MP -MF $(DEPDIR)/unittest-CLI.Tpo -c -o unittest-CLI.obj `if test -f '$(top_srcdir)/src/CLI.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/CLI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/CLI.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-CLI.Tpo $(DEPDIR)/unittest-CLI.Po
#	source='$(top_srcdir)/src/CLI.cpp' object='unittest-CLI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-CLI.obj `if test -f '$(top_srcdir)/src/CLI.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/CLI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/CLI.cpp'; fi`

unittest-Utility.o: $(top_srcdir)/src/Utility.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Utility.o -MD -MP -MF $(DEPDIR)/unittest-Utility.Tpo -c -o unittest-Utility.o `test -f '$(top_srcdir)/src/Utility.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Utility.cc
	$(am__mv) $(DEPDIR)/unittest-Utility.Tpo $(DEPDIR)/unittest-Utility.Po
#	source='$(top_srcdir)/src/Utility.cc' object='unittest-Utility.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Utility.o `test -f '$(top_srcdir)/src/Utility.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Utility.cc

unittest-Utility.obj: $(top_srcdir)/src/Utility.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Utility.obj -MD -MP -MF $(DEPDIR)/unittest-Utility.Tpo -c -o unittest-Utility.obj `if test -f '$(top_srcdir)/src/Utility.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Utility.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Utility.cc'; fi`
	$(am__mv) $(DEPDIR)/unittest-Utility.Tpo $(DEPDIR)/unittest-Utility.Po
#	source='$(top_srcdir)/src/Utility.cc' object='unittest-Utility.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Utility.obj `if test -f '$(top_srcdir)/src/Utility.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Utility.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Utility.cc'; fi`

unittest-Timer.o: $(top_srcdir)/src/Timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Timer.o -MD -MP -MF $(DEPDIR)/unittest-Timer.Tpo -c -o unittest-Timer.o `test -f '$(top_srcdir)/src/Timer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Timer.cpp
	$(am__mv) $(DEPDIR)/unittest-Timer.Tpo $(DEPDIR)/unittest-Timer.Po
#	source='$(top_srcdir)/src/Timer.cpp' object='unittest-Timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Timer.o `test -f '$(top_srcdir)/src/Timer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/Timer.cpp

unittest-Timer.obj: $(top_srcdir)/src/Timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Timer.obj -MD -MP -MF $(DEPDIR)/unittest-Timer.Tpo -c -o unittest-Timer.obj `if test -f '$(top_srcdir)/src/Timer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Timer.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-Timer.Tpo $(DEPDIR)/unittest-Timer.Po
#	source='$(top_srcdir)/src/Timer.cpp' object='unittest-Timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Timer.obj `if test -f '$(top_srcdir)/src/Timer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Timer.cpp'; fi`

unittest-IMatrix.o: $(top_srcdir)/src/IMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-IMatrix.o -MD -MP -MF $(DEPDIR)/unittest-IMatrix.Tpo -c -o unittest-IMatrix.o `test -f '$(top_srcdir)/src/IMatrix.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IMatrix.cc
	$(am__mv) $(DEPDIR)/unittest-IMatrix.Tpo $(DEPDIR)/unittest-IMatrix.Po
#	source='$(top_srcdir)/src/IMatrix.cc' object='unittest-IMatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-IMatrix.o `test -f '$(top_srcdir)/src/IMatrix.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IMatrix.cc

unittest-IMatrix.obj: $(top_srcdir)/src/IMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-IMatrix.obj -MD -MP -MF $(DEPDIR)/unittest-IMatrix.Tpo -c -o unittest-IMatrix.obj `if test -f '$(top_srcdir)/src/IMatrix.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IMatrix.cc'; fi`
	$(am__mv) $(DEPDIR)/unittest-IMatrix.Tpo $(DEPDIR)/unittest-IMatrix.Po
#	source='$(top_srcdir)/src/IMatrix.cc' object='unittest-IMatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-IMatrix.obj `if test -f '$(top_srcdir)/src/IMatrix.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IMatrix.cc'; fi`

unittest-Configuration.o: $(top_srcdir)/src/Configuration.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Configuration.o -MD -MP -MF $(DEPDIR)/unittest-Configuration.Tpo -c -o unittest-Configuration.o `test -f '$(top_srcdir)/src/Configuration.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Configuration.cc
	$(am__mv) $(DEPDIR)/unittest-Configuration.Tpo $(DEPDIR)/unittest-Configuration.Po
#	source='$(top_srcdir)/src/Configuration.cc' object='unittest-Configuration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Configuration.o `test -f '$(top_srcdir)/src/Configuration.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/Configuration.cc

unittest-Configuration.obj: $(top_srcdir)/src/Configuration.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Configuration.obj -MD -MP -MF $(DEPDIR)/unittest-Configuration.Tpo -c -o unittest-Configuration.obj `if test -f '$(top_srcdir)/src/Configuration.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Configuration.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Configuration.cc'; fi`
	$(am__mv) $(DEPDIR)/unittest-Configuration.Tpo $(DEPDIR)/unittest-Configuration.Po
#	source='$(top_srcdir)/src/Configuration.cc' object='unittest-Configuration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Configuration.obj `if test -f '$(top_srcdir)/src/Configuration.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/Configuration.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/Configuration.cc'; fi`

unittest-IRowColumnDS.o: $(top_srcdir)/src/IRowColumnDS.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-IRowColumnDS.o -MD -MP -MF $(DEPDIR)/unittest-IRowColumnDS.Tpo -c -o unittest-IRowColumnDS.o `test -f '$(top_srcdir)/src/IRowColumnDS.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IRowColumnDS.cc
	$(am__mv) $(DEPDIR)/unittest-IRowColumnDS.Tpo $(DEPDIR)/unittest-IRowColumnDS.Po
#	source='$(top_srcdir)/src/IRowColumnDS.cc' object='unittest-IRowColumnDS.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-IRowColumnDS.o `test -f '$(top_srcdir)/src/IRowColumnDS.cc' || echo '$(srcdir)/'`$(top_srcdir)/src/IRowColumnDS.cc

unittest-IRowColumnDS.obj: $(top_srcdir)/src/IRowColumnDS.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-IRowColumnDS.obj -MD -MP -MF $(DEPDIR)/unittest-IRowColumnDS.Tpo -c -o unittest-IRowColumnDS.obj `if test -f '$(top_srcdir)/src/IRowColumnDS.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IRowColumnDS.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IRowColumnDS.cc'; fi`
	$(am__mv) $(DEPDIR)/unittest-IRowColumnDS.Tpo $(DEPDIR)/unittest-IRowColumnDS.Po
#	source='$(top_srcdir)/src/IRowColumnDS.cc' object='unittest-IRowColumnDS.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-IRowColumnDS.obj `if test -f '$(top_srcdir)/src/IRowColumnDS.cc'; then $(CYGPATH_W) '$(top_srcdir)/src/IRowColumnDS.cc'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/IRowColumnDS.cc'; fi`

unittest-MatrixTest.o: MatrixTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-MatrixTest.o -MD -MP -MF $(DEPDIR)/unittest-MatrixTest.Tpo -c -o unittest-MatrixTest.o `test -f 'MatrixTest.cpp' || echo '$(srcdir)/'`MatrixTest.cpp
	$(am__mv) $(DEPDIR)/unittest-MatrixTest.Tpo $(DEPDIR)/unittest-MatrixTest.Po
#	source='MatrixTest.cpp' object='unittest-MatrixTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-MatrixTest.o `test -f 'MatrixTest.cpp' || echo '$(srcdir)/'`MatrixTest.cpp

unittest-MatrixTest.obj: MatrixTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-MatrixTest.obj -MD -MP -MF $(DEPDIR)/unittest-MatrixTest.Tpo -c -o unittest-MatrixTest.obj `if test -f 'MatrixTest.cpp'; then $(CYGPATH_W) 'MatrixTest.cpp'; else $(CYGPATH_W) '$(srcdir)/MatrixTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-MatrixTest.Tpo $(DEPDIR)/unittest-MatrixTest.Po
#	source='MatrixTest.cpp' object='unittest-MatrixTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-MatrixTest.obj `if test -f 'MatrixTest.cpp'; then $(CYGPATH_W) 'MatrixTest.cpp'; else $(CYGPATH_W) '$(srcdir)/MatrixTest.cpp'; fi`

unittest-unittest.o: unittest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-unittest.o -MD -MP -MF $(DEPDIR)/unittest-unittest.Tpo -c -o unittest-unittest.o `test -f 'unittest.cpp' || echo '$(srcdir)/'`unittest.cpp
	$(am__mv) $(DEPDIR)/unittest-unittest.Tpo $(DEPDIR)/unittest-unittest.Po
#	source='unittest.cpp' object='unittest-unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-unittest.o `test -f 'unittest.cpp' || echo '$(srcdir)/'`unittest.cpp

unittest-unittest.obj: unittest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-unittest.obj -MD -MP -MF $(DEPDIR)/unittest-unittest.Tpo -c -o unittest-unittest.obj `if test -f 'unittest.cpp'; then $(CYGPATH_W) 'unittest.cpp'; else $(CYGPATH_W) '$(srcdir)/unittest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-unittest.Tpo $(DEPDIR)/unittest-unittest.Po
#	source='unittest.cpp' object='unittest-unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-unittest.obj `if test -f 'unittest.cpp'; then $(CYGPATH_W) 'unittest.cpp'; else $(CYGPATH_W) '$(srcdir)/unittest.cpp'; fi`

unittest-ApplicationTest.o: ApplicationTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ApplicationTest.o -MD -MP -MF $(DEPDIR)/unittest-ApplicationTest.Tpo -c -o unittest-ApplicationTest.o `test -f 'ApplicationTest.cpp' || echo '$(srcdir)/'`ApplicationTest.cpp
	$(am__mv) $(DEPDIR)/unittest-ApplicationTest.Tpo $(DEPDIR)/unittest-ApplicationTest.Po
#	source='ApplicationTest.cpp' object='unittest-ApplicationTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ApplicationTest.o `test -f 'ApplicationTest.cpp' || echo '$(srcdir)/'`ApplicationTest.cpp

unittest-ApplicationTest.obj: ApplicationTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ApplicationTest.obj -MD -MP -MF $(DEPDIR)/unittest-ApplicationTest.Tpo -c -o unittest-ApplicationTest.obj `if test -f 'ApplicationTest.cpp'; then $(CYGPATH_W) 'ApplicationTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-ApplicationTest.Tpo $(DEPDIR)/unittest-ApplicationTest.Po
#	source='ApplicationTest.cpp' object='unittest-ApplicationTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ApplicationTest.obj `if test -f 'ApplicationTest.cpp'; then $(CYGPATH_W) 'ApplicationTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationTest.cpp'; fi`

unittest-HeapPQTest.o: HeapPQTest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-HeapPQTest.o -MD -MP -MF $(DEPDIR)/unittest-HeapPQTest.Tpo -c -o unittest-HeapPQTest.o `test -f 'HeapPQTest.cc' || echo '$(srcdir)/'`HeapPQTest.cc
	$(am__mv) $(DEPDIR)/unittest-HeapPQTest.Tpo $(DEPDIR)/unittest-HeapPQTest.Po
#	source='HeapPQTest.cc' object='unittest-HeapPQTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-HeapPQTest.o `test -f 'HeapPQTest.cc' || echo '$(srcdir)/'`HeapPQTest.cc

unittest-HeapPQTest.obj: HeapPQTest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-HeapPQTest.obj -MD -MP -MF $(DEPDIR)/unittest-HeapPQTest.Tpo -c -o unittest-HeapPQTest.obj `if test -f 'HeapPQTest.cc'; then $(CYGPATH_W) 'HeapPQTest.cc'; else $(CYGPATH_W) '$(srcdir)/HeapPQTest.cc'; fi`
	$(am__mv) $(DEPDIR)/unittest-HeapPQTest.Tpo $(DEPDIR)/unittest-HeapPQTest.Po
#	source='HeapPQTest.cc' object='unittest-HeapPQTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-HeapPQTest.obj `if test -f 'HeapPQTest.cc'; then $(CYGPATH_W) 'HeapPQTest.cc'; else $(CYGPATH_W) '$(srcdir)/HeapPQTest.cc'; fi`

unittest-BucketPQTest.o: BucketPQTest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BucketPQTest.o -MD -MP -MF $(DEPDIR)/unittest-BucketPQTest.Tpo -c -o unittest-BucketPQTest.o `test -f 'BucketPQTest.cc' || echo '$(srcdir)/'`BucketPQTest.cc
	$(am__mv) $(DEPDIR)/unittest-BucketPQTest.Tpo $(DEPDIR)/unittest-BucketPQTest.Po
#	source='BucketPQTest.cc' object='unittest-BucketPQTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BucketPQTest.o `test -f 'BucketPQTest.cc' || echo '$(srcdir)/'`BucketPQTest.cc

unittest-BucketPQTest.obj: BucketPQTest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BucketPQTest.obj -MD -MP -MF $(DEPDIR)/unittest-BucketPQTest.Tpo -c -o unittest-BucketPQTest.obj `if test -f 'BucketPQTest.cc'; then $(CYGPATH_W) 'BucketPQTest.cc'; else $(CYGPATH_W) '$(srcdir)/BucketPQTest.cc'; fi`
	$(am__mv) $(DEPDIR)/unittest-BucketPQTest.Tpo $(DEPDIR)/unittest-BucketPQTest.Po
#	source='BucketPQTest.cc' object='unittest-BucketPQTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BucketPQTest.obj `if test -f 'BucketPQTest.cc'; then $(CYGPATH_W) 'BucketPQTest.cc'; else $(CYGPATH_W) '$(srcdir)/BucketPQTest.cc'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic ctags \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS

#TrimOne_CXXFLAGS=$(CPP_PROFILING_FLAGS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
